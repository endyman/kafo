#!/usr/bin/env ruby

require 'fileutils'
require 'optparse'

# Option Parsing
name = ARGV[0]

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: kafofy [installer_name]"
  if name
    options[:config_file] = "./config/#{name}.yaml"
  else
    options[:config_file] = nil
  end
  opts.on("-c", "--config_file FILE", "location of the configuration file") do |config_file|
    options[:config_file] = config_file
  end
  options[:answers_file] = './config/answers.yaml'
  opts.on("-a", "--answers_file FILE", "location of the answers file") do |answers_file|
    options[:answers_file] = answers_file
  end
end.parse!

# Create directory structure
%w(bin config modules).each do |dir|
  FileUtils.mkdir_p dir
end

# Copy config files
src = File.expand_path(File.join(File.dirname(__FILE__), '..'))
%w(config_header.txt kafo.yaml.example).each do |file|
  FileUtils.cp src + "/config/#{file}", 'config/'
end

script_name = "kafo-configure"
# Optional configure script
if name
  script_name = "bin/#{name}"
  puts "... creating #{script_name}"
  content = <<EOS
#!/usr/bin/env ruby
require 'rubygems'
CONFIG_FILE = '#{options[:config_file]}'
ANSWERS_FILE = '#{options[:answers_file]}'
require 'kafo'
result = Kafo::KafoConfigure.run
exit result.nil? ? 0 : result.exit_code
EOS
  File.open(script_name, 'w') { |file| file.write(content) }
  FileUtils.chmod 0755, script_name
end

puts "Your directory was kafofied"

puts "Now you should:"
puts "  1. upload your puppet modules to modules directory (you can use librarian-puppet project)"
puts "  2. create default config/answers.yaml or modify config/kafo.yaml to load another answer file"
puts "  3. run #{script_name}"
